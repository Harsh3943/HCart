//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCart.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HCartEntities1 : DbContext
    {
        public HCartEntities1()
            : base("name=HCartEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<SubCategory> SubCategories { get; set; }
        public virtual DbSet<UserMaster> UserMasters { get; set; }
    
        public virtual int GET_LoginAndUser(string fullName, string email, string password)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_LoginAndUser", fullNameParameter, emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SP_GETAll_Result> SP_GETAll(Nullable<int> mode, string userName, string password)
        {
            var modeParameter = mode.HasValue ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETAll_Result>("SP_GETAll", modeParameter, userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SP_GETCategory_Result> SP_GETCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETCategory_Result>("SP_GETCategory");
        }
    }
}
